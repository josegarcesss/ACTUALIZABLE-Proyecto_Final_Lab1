/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package Vistas;

import AccesoADatos.ClasesData;
import AccesoADatos.EntrenadorData;
import Entidades.Clase;
import Entidades.Entrenador;
import java.util.List;
import java.sql.Time;
import java.time.LocalTime;
import java.util.Set;
import java.util.TreeSet;
import javax.swing.JOptionPane;

/**
 *
 * @author Alakyan
 */
public class VistaNuevaClase extends javax.swing.JInternalFrame {

    ClasesData claseData;
    EntrenadorData entrenadorData;
    List<Entrenador> entrenadores;

    /**
     * Creates new form VistaNuevaClase
     */
    public VistaNuevaClase() {
        initComponents();
        claseData = new ClasesData();
        entrenadorData = new EntrenadorData();
        entrenadores = entrenadorData.listarEntrenadores();
        cargas();
    }

    private void cargas() {
        cargarComboEntrenadores();
        cargarComboHorarios();
    }

    private void cargarComboEntrenadores() {
        jcb_ComboEntrenador.removeAllItems();
        for (Entrenador e : entrenadores) {
            if (e.isEstado()) {
                String entrenador = e.toString();
                jcb_ComboEntrenador.addItem(entrenador);
            }
        }
    }

    private void cargarComboHorarios() {
    jcb_HorarioClase.removeAllItems();
    Set<Time> horasTotal = new TreeSet<>((t1, t2) -> {
        // 1ro Comparar las horas
        return t1.toString().compareTo(t2.toString());
    });
    int idEntrenador = 0;

    //2do Obtener el entrenador seleccionado
    String entrenadorCombo = (String) jcb_ComboEntrenador.getSelectedItem();
    for (Entrenador entrenador : entrenadores) {
        if (entrenador.toString().equalsIgnoreCase(entrenadorCombo)) {
            idEntrenador = entrenador.getIdEntrenador();
            break;
        }
    }

    //3ro Obtener los horarios asignados al entrenador
    List<Time> horasSI = claseData.listarHorariosXEntrenador(idEntrenador);

    //4to Generar todas las horas del d√≠a y agregarlas al conjunto ordenado
    for (int i = 0; i < 24; i++) {
        LocalTime hora = LocalTime.of(i, 0, 0);
        Time hora2 = Time.valueOf(hora);
        horasTotal.add(hora2);
    }

    //5to Agregar las horas disponibles al ComboBox
    for (Time hora : horasTotal) {
        if (!horasSI.contains(hora)) {
            jcb_HorarioClase.addItem(hora.toString());
        }
    }
}


    
    


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDateChooserBeanInfo1 = new com.toedter.calendar.JDateChooserBeanInfo();
        dateUtil1 = new com.toedter.calendar.DateUtil();
        jSpinFieldBeanInfo1 = new com.toedter.components.JSpinFieldBeanInfo();
        jLabel1 = new javax.swing.JLabel();
        jcb_HorarioClase = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jt_NombreClase = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jb_Guardar = new javax.swing.JButton();
        jt_Capacidad = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel5 = new javax.swing.JLabel();
        jcb_ComboEntrenador = new javax.swing.JComboBox<>();
        jb_Salir = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setText("Nueva Clase");

        jcb_HorarioClase.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcb_HorarioClaseItemStateChanged(evt);
            }
        });

        jLabel2.setText("Seleccione un Horario:");

        jLabel3.setText("Nombre: ");

        jb_Guardar.setText("Guardar");
        jb_Guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_GuardarActionPerformed(evt);
            }
        });

        jLabel4.setText("Capacidad Maxima:");

        jLabel5.setText("Entrenador:");

        jcb_ComboEntrenador.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcb_ComboEntrenadorItemStateChanged(evt);
            }
        });
        jcb_ComboEntrenador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcb_ComboEntrenadorActionPerformed(evt);
            }
        });

        jb_Salir.setText("Salir");
        jb_Salir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_SalirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(37, 37, 37)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addGap(18, 18, 18)
                                        .addComponent(jcb_ComboEntrenador, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addGap(18, 18, 18)
                                        .addComponent(jcb_HorarioClase, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(71, 71, 71)
                                        .addComponent(jLabel3)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jt_NombreClase, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 41, Short.MAX_VALUE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(52, 52, 52)
                                .addComponent(jLabel4)
                                .addGap(18, 18, 18)
                                .addComponent(jt_Capacidad, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jb_Guardar)))
                        .addGap(31, 31, 31))
                    .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(220, 220, 220)
                .addComponent(jb_Salir)
                .addGap(42, 42, 42))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jb_Salir))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jcb_ComboEntrenador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcb_HorarioClase, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jt_NombreClase, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jt_Capacidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(jb_Guardar))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jcb_ComboEntrenadorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcb_ComboEntrenadorActionPerformed
        
    }//GEN-LAST:event_jcb_ComboEntrenadorActionPerformed

    private void jb_SalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_SalirActionPerformed
        dispose();
    }//GEN-LAST:event_jb_SalirActionPerformed

    private void jcb_ComboEntrenadorItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcb_ComboEntrenadorItemStateChanged
        cargarComboHorarios();
    }//GEN-LAST:event_jcb_ComboEntrenadorItemStateChanged

    private void jcb_HorarioClaseItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcb_HorarioClaseItemStateChanged

    }//GEN-LAST:event_jcb_HorarioClaseItemStateChanged

    private void jb_GuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_GuardarActionPerformed
        Clase clase=new Clase();
        if(jt_NombreClase.getText().equals("") || jt_Capacidad.getText().equals("")){
            JOptionPane.showMessageDialog(this, "NO DEJE ESPACIOS EN BLANCO");
            return;
        }else{
            if(!jt_NombreClase.getText().matches("[a-zA-Z\\s]+")){
             JOptionPane.showMessageDialog(this, "Ingrese un nombre valido");
             return;
            }
            clase.setNombre(jt_NombreClase.getText());
        try{
        clase.setCapacidad(Math.abs(Integer.parseInt(jt_Capacidad.getText())));
        jt_Capacidad.setText(Math.abs(Integer.parseInt(jt_Capacidad.getText()))+"");
        }catch(NumberFormatException ex){
            JOptionPane.showMessageDialog(this, "INGRESA UNA CANTIDAD EN ENTEROS");
            return;
        }
        for (Entrenador entrenador : entrenadores) {
            if(jcb_ComboEntrenador.getSelectedItem().toString().equalsIgnoreCase(entrenador.toString())){
               clase.setEntrenador(entrenador); 
            }
        }
        clase.setEstado(true);
        Time hora=Time.valueOf(jcb_HorarioClase.getSelectedItem().toString());
        clase.setHorario(hora);
        claseData.guardarClase(clase);
        jt_Capacidad.setText("");
        jt_NombreClase.setText("");
        }
    }//GEN-LAST:event_jb_GuardarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.DateUtil dateUtil1;
    private com.toedter.calendar.JDateChooserBeanInfo jDateChooserBeanInfo1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JSeparator jSeparator1;
    private com.toedter.components.JSpinFieldBeanInfo jSpinFieldBeanInfo1;
    private javax.swing.JButton jb_Guardar;
    private javax.swing.JButton jb_Salir;
    private javax.swing.JComboBox<String> jcb_ComboEntrenador;
    private javax.swing.JComboBox<String> jcb_HorarioClase;
    private javax.swing.JTextField jt_Capacidad;
    private javax.swing.JTextField jt_NombreClase;
    // End of variables declaration//GEN-END:variables
}
